{"version":3,"file":"static/js/247.898d744b.chunk.js","mappings":"6MA4CA,UAvCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAWA,OATAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWN,GACRO,MAAK,SAAAC,GACJJ,EAASI,EAAKC,SAEfC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MACzBG,SAAQ,iBACV,CAACd,KAGF,+BACE,eAAIe,MAAO,CAAEC,cAAe,OAAQC,QAAS,OAAQC,SAAU,QAA/D,SACGf,EAAMgB,KAAI,SAAAC,GACT,OACE,gBAEEL,MAAO,CAAEM,MAAO,QAASC,UAAW,UAFtC,WAIE,gBACEP,MAAO,CAAEM,MAAO,SAChBE,IACEH,EAAQI,aAAR,yCACsCJ,EAAQI,cAC1CC,EAENC,IAAKN,EAAQO,aAEf,uBAAIP,EAAQQ,SAZPR,EAAQS,a,iMCpBrBC,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QALY,sCAUHC,EAAgB,mCAAG,sGACPL,EAASM,IAAI,oBADN,uBACtB5B,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAMhB6B,EAAY,mCAAG,WAAMR,GAAN,yFACHC,EAASM,IAAT,gBAAsBP,IADnB,uBAClBrB,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAMZ8B,EAAgB,mCAAG,WAAMC,GAAN,yFACPT,EAASM,IAAT,6BAAmCG,IAD5B,uBACtB/B,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAOhBF,EAAU,mCAAG,WAAMuB,GAAN,yFACDC,EAASM,IAAT,gBAAsBP,EAAtB,aADC,uBAChBrB,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,sDAOVgC,EAAU,mCAAG,WAAMX,GAAN,yFACDC,EAASM,IAAT,gBAAsBP,EAAtB,aADC,uBAChBrB,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,uD","sources":["components/Cast/Cast.jsx","utils/getDataFromApi.js"],"sourcesContent":["import { getCredits } from 'utils/getDataFromApi';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport noImage from '../../images/No-Image-Placeholder.png';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [casts, setCasts] = useState([]);\n\n  useEffect(() => {\n    getCredits(movieId)\n      .then(data => {\n        setCasts(data.cast);\n      })\n      .catch(err => console.log(err))\n      .finally(() => {});\n  }, [movieId]);\n\n  return (\n    <>\n      <ul style={{ listStyleType: 'none', display: 'flex', flexWrap: 'wrap' }}>\n        {casts.map(element => {\n          return (\n            <li\n              key={element.id}\n              style={{ width: '150px', textAlign: 'center' }}\n            >\n              <img\n                style={{ width: '100px' }}\n                src={\n                  element.profile_path\n                    ? `https://image.tmdb.org/t/p/w500${element.profile_path}`\n                    : noImage\n                }\n                alt={element.character}\n              />\n              <p>{element.name}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'c2c2179bae59e0599504e4f54aeda7db';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\n// TRENDS = 'trending/all/day'\nexport const getPopularMovies = async () => {\n  const { data } = await instance.get('trending/all/day');\n  return data;\n};\n\n// MOVIEbyID = 'movie/{id}'\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`movie/${id}`);\n  return data;\n};\n\n// MOVIEbySearch = 'search/movie'\nexport const getMovieBySearch = async searchedMovie => {\n  const { data } = await instance.get(`search/movie?query=${searchedMovie}`);\n  return data;\n};\n\n// CREDITS = '/movie/{movie_id}/credits';\n\nexport const getCredits = async id => {\n  const { data } = await instance.get(`movie/${id}/credits`);\n  return data;\n};\n\n// REVIEWS = '/movie/{movie_id}/reviews';\n\nexport const getReviews = async id => {\n  const { data } = await instance.get(`movie/${id}/reviews`);\n  return data;\n};\n"],"names":["movieId","useParams","useState","casts","setCasts","useEffect","getCredits","then","data","cast","catch","err","console","log","finally","style","listStyleType","display","flexWrap","map","element","width","textAlign","src","profile_path","noImage","alt","character","name","id","instance","axios","baseURL","params","api_key","getPopularMovies","get","getMovieById","getMovieBySearch","searchedMovie","getReviews"],"sourceRoot":""}