{"version":3,"file":"static/js/692.9d15684b.chunk.js","mappings":"uKACA,MAAuB,yBAAvB,EAA6D,+BAA7D,EAA0G,gCAA1G,EAAkJ,0B,uCCsDlJ,EAlDmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAKjB,OACE,8BACGF,IACC,eAAIG,UAAWC,EAAf,SACGJ,EAAOK,KAAI,SAAAC,GAAY,IAAD,EAarB,OACE,yBACE,UAAC,KAAD,CACEH,UAAWC,EACXG,GAAE,kBAAaD,EAAQE,IACvBC,MAAOR,EAHT,WAKE,eAAIE,UAAWC,EAAf,mBACGE,EAAQI,aADX,QACoBJ,EAAQK,QAE5B,gBACER,UAAWC,EACXQ,IAvBDN,EAAQO,eAAkBP,EAAQQ,YAG/B,kCAAN,OACER,EAAQO,cACJP,EAAQO,cACRP,EAAQQ,aALPC,EAuBHC,IAAI,cAZDV,EAAQE,a,gFC5B/B,EAAwB,wB,uCCsBxB,EAlBiB,WACf,OAA8BS,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJJ,EAAWI,EAAKC,YAEjBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,YACjCC,SAAQ,iBACV,KAED,iCACE,eAAI3B,UAAWC,EAAf,6BACA,SAAC2B,EAAA,EAAD,CAAY/B,OAAQkB,S,6KCjBpBc,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,gCAGlB,IAAMZ,EAAmB,WAI9B,OAHAY,IAAAA,SAAAA,OAAwB,CACtBC,QAASF,GAEJC,IAAAA,IACA,oBACJX,MAAK,qBAAGC,QACRE,OAAM,SAAAC,GAAK,OAAIA,MAIPS,EAAe,SAAA3B,GAI1B,OAHAyB,IAAAA,SAAAA,OAAwB,CACtBC,QAASF,GAEJC,IAAAA,IAAA,gBAAmBzB,IAAMc,MAAK,qBAAGC,SAK7Ba,EAAmB,SAAAC,GAK9B,OAJAJ,IAAAA,SAAAA,OAAwB,CACtBK,MAAOD,EACPH,QAASF,GAEJC,IAAAA,IAAA,gBAEJX,MAAK,qBAAGC,QACRE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,aAKzBU,EAAa,SAAA/B,GAIxB,OAHAyB,IAAAA,SAAAA,OAAwB,CACtBC,QAASF,GAEJC,IAAAA,IAAA,gBACSzB,EADT,aAEJc,MAAK,qBAAGC,QACRE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,aAKzBW,EAAa,SAAAhC,GAIxB,OAHAyB,IAAAA,SAAAA,OAAwB,CACtBC,QAASF,GAEJC,IAAAA,IAAA,gBACSzB,EADT,aAEJc,MAAK,qBAAGC,QACRE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,c","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/pages/HomePage.module.css?fc1d","pages/HomePage.jsx","utils/getDataFromApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\",\"item__link\":\"MoviesList_item__link__4hXTR\",\"item__title\":\"MoviesList_item__title__oqm0o\",\"image\":\"MoviesList_image__oyOXu\"};","import PropTypes from 'prop-types';\nimport s from './MoviesList.module.css';\nimport { Link, useLocation } from 'react-router-dom';\nimport noImage from '../../images/No-Image-Placeholder.png';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  //як поставити альтернативне зображення (відсутній малюнок)\n  //не виходить завантажити альтернативний малюнок, в чому проблема?\n\n  return (\n    <>\n      {movies && (\n        <ul className={s.list}>\n          {movies.map(element => {\n            const checkMovieImage = () => {\n              if (!element.backdrop_path && !element.poster_path) {\n                return noImage;\n              } else {\n                return `https://image.tmdb.org/t/p/w500${\n                  element.backdrop_path\n                    ? element.backdrop_path\n                    : element.poster_path\n                }`;\n              }\n            };\n\n            return (\n              <li key={element.id}>\n                <Link\n                  className={s.item__link}\n                  to={`/movies/${element.id}`}\n                  state={location}\n                >\n                  <h1 className={s.item__title}>\n                    {element.title ?? element.name}\n                  </h1>\n                  <img\n                    className={s.image}\n                    src={checkMovieImage()}\n                    alt=\"title\"\n                  />\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nMoviesList.propTypes = { movie: PropTypes.object };\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"HomePage_title__G4sQi\"};","import s from './HomePage.module.css';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { getPopularMovies } from 'utils/getDataFromApi';\nimport { useEffect, useState } from 'react';\n\nconst HomePage = () => {\n  const [popular, setPopular] = useState([]);\n\n  useEffect(() => {\n    getPopularMovies()\n      .then(data => {\n        setPopular(data.results);\n      })\n      .catch(error => console.log(error.message))\n      .finally(() => {});\n  }, []);\n  return (\n    <>\n      <h1 className={s.title}>Trending today</h1>\n      <MoviesList movies={popular} />\n    </>\n  );\n};\nexport default HomePage;\n","import axios from 'axios';\n\nconst API_KEY = 'c2c2179bae59e0599504e4f54aeda7db';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// TRENDS = 'trending/all/day'\nexport const getPopularMovies = () => {\n  axios.defaults.params = {\n    api_key: API_KEY,\n  };\n  return axios\n    .get('trending/all/day')\n    .then(({ data }) => data)\n    .catch(error => error);\n};\n\n// MOVIEbyID = 'movie/{id}'\nexport const getMovieById = id => {\n  axios.defaults.params = {\n    api_key: API_KEY,\n  };\n  return axios.get(`movie/${id}`).then(({ data }) => data);\n  // .catch(error => console.log(error.message));\n};\n\n// MOVIEbySearch = 'search/movie'\nexport const getMovieBySearch = searchedMovie => {\n  axios.defaults.params = {\n    query: searchedMovie,\n    api_key: API_KEY,\n  };\n  return axios\n    .get(`search/movie`)\n    .then(({ data }) => data)\n    .catch(error => console.log(error.message));\n};\n\n// CREDITS = '/movie/{movie_id}/credits';\n\nexport const getCredits = id => {\n  axios.defaults.params = {\n    api_key: API_KEY,\n  };\n  return axios\n    .get(`movie/${id}/credits`)\n    .then(({ data }) => data)\n    .catch(error => console.log(error.message));\n};\n\n// REVIEWS = '/movie/{movie_id}/reviews';\n\nexport const getReviews = id => {\n  axios.defaults.params = {\n    api_key: API_KEY,\n  };\n  return axios\n    .get(`movie/${id}/reviews`)\n    .then(({ data }) => data)\n    .catch(error => console.log(error.message));\n};\n"],"names":["movies","location","useLocation","className","s","map","element","to","id","state","title","name","src","backdrop_path","poster_path","noImage","alt","useState","popular","setPopular","useEffect","getPopularMovies","then","data","results","catch","error","console","log","message","finally","MoviesList","API_KEY","axios","api_key","getMovieById","getMovieBySearch","searchedMovie","query","getCredits","getReviews"],"sourceRoot":""}